extend /_layout.pug

mixin toTds(xs)
  for x in xs
    td
      if x && x[0] === "!"
        em= x.substring(1)
      else
        | #{x}

mixin toTrs(xss, sep="|")
  for xs in xss
    tr
      +toTds(xs.split(sep))

mixin toThTds(xyss)
  - for(const [x, ys] of xyss)
    tr
      th(align="right")= x
      +toTds(ys.split("|"))

mixin sups(xs, sep, mid, end)
  for x, i in xs
    - let [a, b] = x.split(sep)
    if i !== 0
      | #{mid}
    | #{a}
    sup= b
  | #{end}

block head
  - var title = "romanization"
  link(rel="stylesheet", href="style.css")

block main
  p
    | the author
    ul
      li designed the systems below just to suit vis preference or aethetics
      li claims no exclusive orthodoxy of them
      li forces no one to use them
      li may make incompatible changes in them.
    | if some one however would like and try to use them, the author would be very glad.

  +mySection("cantonese")
    a(href="https://sumigv.github.io/jytpiq/") external page

  +mySection("japanese")
    p: em under construction

    center
      table
        caption= author.name
        tbody.vowel
          tr
            +toTds("i|e|a|o|u".split("|"))
        tbody.consonant
          +toTrs(
            [ " | |k|g| |j"
            , "s|z|t|d|n|r"
            , " | |f|b|m|v|p"
            ])

    ul
      li represent any 促音‹ッ› of an entering tone by ‹k, t, f› e.g. 合算 gafsan.
      li represent any 促音‹ッ› in other cases by double consonants.
      li represent any 撥音‹ン› of a マ行 (m) phoneme by ‹m›.
      li represent any 撥音‹ン› in other cases by ‹n›.
      li combine a verb-root and an ending with a hyphen U+002D ‹-›.
      li combine a noun and a case-particle with a double hyphen U+2E40 ‹⹀› or an equal U+003D ‹=›.

  +mySection("mandarin")
    p: em under construction

    center
      table
        caption= author.name
        tbody.consonant
          +toTrs(
            [ "b,p,m,f, "
            , "d,t,n, ,l"
            , "z,c, ,s, "
            , "ż,ċ, ,ṡ,r"
            , "ž,č, ,š, "
            , "g,k, ,h, "
            ]
            , ",")
        tbody.vowel
          tr
            td
            td
            td
            th.over-th(colspan="5") a
            th.over-th(colspan="5") e
          tr
            for x in ",,,,i,u,n,ŋ,,i,u,n,ŋ".split(",")
              th(align="right")= x
          +toThTds(
            [ ["",  "| | a| ai| au| an| aŋ| e| ei| eu| en| eŋ"]
            , ["i", "|i|ia|iai|iau|ian|iaŋ|ië|   |ieu|ien|ieŋ"]
            , ["u", "|u|ua|uai|   |uan|uaŋ|uė|uei|   |uen|ueŋ"]
            , ["y", "|y|  |   |   |yan|   |yë|   |   |yen|yeŋ"]
            ])

      table
        caption #{author.name}-ASCII
        tbody.consonant
          +toTrs(
            [ "b,p,m,f, "
            , "d,t,n, ,l"
            , "z,c, ,s, "
            , "zr,cr, ,sr,r"
            , "zh,ch, ,sh, "
            , "g,k, ,h, "
            ]
            , ",")
        tbody.vowel
          tr
            td
            td
            td
            th.over-th(colspan="5") a
            th.over-th(colspan="5") e
          tr
            for x in ",,,,i,u,n,ŋ,,i,u,n,ŋ".split(",")
              th(align="right")= x
          +toThTds(
            [ ["",  "| | a| ai| au| an| aq| e| ei| eu| en| eq"]
            , ["i", "|i|ia|iai|iau|ian|iaq|ie|   |ieu|ien|ieq"]
            , ["u", "|u|ua|uai|   |uan|uaq|ue|uei|   |uen|ueq"]
            , ["y", "|y|  |   |   |yan|   |ye|   |   |yen|yeq"]
            ])

      table
        caption 注音符號
        tbody.consonant
          +toTrs(
            [ "ㄅ,ㄆ,ㄇ,ㄈ"
            , "ㄉ,ㄊ,ㄋ,  ,ㄌ"
            , "ㄗ,ㄘ,  ,ㄙ"
            , "ㄓ,ㄔ,  ,ㄕ,ㄖ"
            , "ㄐ,ㄑ,  ,ㄒ"
            , "ㄍ,ㄎ,  ,ㄏ"
            ]
            , ",")
        tbody.vowel
          tr
            td
            td
            td
            th.over-th(colspan="5") a
            th.over-th(colspan="5") e
          tr
            for x in ",,,,i,u,n,ŋ,,i,u,n,ŋ".split(",")
              th(align="right")= x
          +toThTds(
              [ ["",  "|ㄭ|  ㄚ|  ㄞ|  ㄠ|  ㄢ|  ㄤ|  ㄜ|  ㄟ|  ㄡ|  ㄣ|  ㄥ"]
              , ["i", "|ㄧ|ㄧㄚ|ㄧㄞ|ㄧㄠ|ㄧㄢ|ㄧㄤ|ㄧㄝ|    |ㄧㄡ|ㄧㄣ|ㄧㄥ"]
              , ["u", "|ㄨ|ㄨㄚ|ㄨㄞ|    |ㄨㄢ|ㄨㄤ|ㄨㄛ|ㄨㄟ|    |ㄨㄣ|ㄨㄥ"]
              , ["y", "|ㄩ|    |    |    |ㄩㄢ|    |ㄩㄝ|    |    |ㄩㄣ|ㄩㄥ"]
              ])

      table
        caption 漢語拼音
        tbody.consonant
          +toTrs(
            [ "b ,p ,m,f"
            , "d ,t ,n,  ,l"
            , "z ,c , ,s"
            , "zh,ch, ,sh,r"
            , "j ,q , ,x"
            , "g ,k , ,h"
            ]
            , ",")
        tbody.vowel
          tr
            td
            td
            td
            th.over-th(colspan="5") a
            th.over-th(colspan="5") e
          tr
            for x in ",,,,i,u,n,ng,,i,u,n,ng".split(",")
              th(align="right")= x
          +toThTds(
            [ ["",   "|  | a| ai| ao|  an| ang|  e| ei| ou|  en|  eng"]
            , ["i",  "|yi|ya|yai|yao| yan|yang| ye|   |you|!yin|!ying"]
            , ["u",  "|wu|wa|wai|   | wan|wang| wo|wei|   | wen| weng"]
            , ["yu", "|yu|  |   |   |yuan|    |yue|   |   |!yun|!yong"]
            ])
        tbody.vowel
          tr
            td
            td
            td
            th.over-th(colspan="5") a
            th.over-th(colspan="5") e
          tr
            for x in ",,,,i,u,n,ng,,i,u,n,ng".split(",")
              th(align="right")= x
          +toThTds(
            [ ["",  "|i| a| ai| ao| an| ang|e | ei| ou| en|  eng"]
            , ["i", "|i|ia|   |iao|ian|iang|ie|   |!iu|!in|! ing"]
            , ["u", "|u|ua|uai|   |uan|uang|uo|!ui|   |!un|! ong"]
            , ["ü", "|ü|  |   |   |üan|    |üe|       |!ün|!iong"]
            ])

      table
        caption tones
        tbody.tone
          for xs in ["陰平|陰上|上|去|輕", "媽|麻|馬|罵|嗎"]
            tr
              td
                for x in xs.split("|")
                    th= x
          -
          +toThTds(
            [ ["IPA-letter",           "˥|˧˥|˧˩˥|˥˩|"]
            , ["IPA-diacritic",        "a\u0301|a\u030C|a\u1DC9|a\u0302|a"]
            , [`${author.name}-ASCII`, "-|/|~|\\|"]
            , ["pinyin-diacritic",     "a\u0304|a\u0301|a\u030C|a\u0300|a"]
            , ["pinyin-number",        "1|2|3|4|(0)"]
            ])
